# Kapacitor Configuration

# Data directory for Kapacitor to store data
data_dir = "/var/lib/kapacitor"

# HTTP API Server
[http]
  # HTTP API Server for Kapacitor
  # Default bind address: ":9092"
  bind-address = ":9092"
  # Default log enabled: false
  log-enabled = true
  # Default auth enabled: false
  auth-enabled = false
  # Default write tracing: false
  write-tracing = false
  # Default ping auth enabled: false
  ping-auth-enabled = false

# InfluxDB Configuration
[[influxdb]]
  # Connect to an InfluxDB cluster
  # Kapacitor can subscribe, query and write to this cluster.
  name = "default"
  urls = ["http://influxdb:8086"]
  token = "my-super-secret-admin-token" # CHANGE THIS to match your InfluxDB token
  organization = "my-org"
  # For InfluxDB v2, we need to disable the subscription model
  # and rely on the HTTP API instead
  disable-subscriptions = true
  # Default bucket mapping
  default-bucket = "my-bucket"
  # Uncomment this if you have InfluxDB v2 with TLS enabled
  # insecure-skip-verify = true
  
  # Map influxDB 1.x database and retention policies to InfluxDB 2.x
  [influxdb.v1]
    enabled = true
    database = "telegraf"
    retention-policy = "autogen"

# Configure deadman's switch
# Deadman's switch is a globally configured check for the Kapacitor process.
# It enables detection of Kapacitor instances that cannot communicate to InfluxDB.
[deadman]
  # Enables/Disables the deadman's switch
  enabled = true
  # The interval to check for the deadman's switch.
  interval = "10s"

# Configure alert handling
[alert]
  # Default recovery message template.
  recovery-template = "{{ .Message }}. is {{ .Level }}"
  # Default notification template.
  topic-template = "{{ index .Tags \"alertName\" }}"
  # Default handler for all alerts.
  handler-default = []

# Configure logging
[logging]
  file = "STDOUT"
  level = "INFO"

# SMTP email configuration
# This is where you can configure sending email alerts
[smtp]
  enabled = false
  host = "localhost"
  port = 25
  username = ""
  password = ""
  from = "example@localhost"
  to = ["example@localhost"]
  # global = false
  # state-changes-only = false
  # global = false
  
# Configure OpsGenie V2 API integration
[opsgenie2]
  enabled = false
  # API key for using OpsGenie v2 API.
  api-key = ""
  # Default Teams (can be overridden per alert rule)
  teams = []
  # Default recipients (can be overridden per alert rule)
  recipients = []
  
# Slack configuration
[slack]
  # Enabled or not
  enabled = false
  # The slack webhook URL, can be obtained by adding
  # an Incoming Webhook integration.
  url = ""
  # Default channel for alerts
  channel = ""
  # Global setting for whether to post to slack for stateChangesOnly
  state-changes-only = false